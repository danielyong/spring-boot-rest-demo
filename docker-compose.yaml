services:
  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_USER: daniel
      POSTGRES_PASSWORD: Strongandcompl3x
      POSTGRES_DB: example
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data:/var/lib/postgresql/data/pgdata
  kafka:
    container_name: kafka
    image: bitnami/kafka
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  application:
    container_name: application
    depends_on:
      - db
      - kafka
    build:
      context: ./
      dockerfile: ./build.dockerfile
    environment:
      DATASOURCE_URL: jdbc:postgresql://db/example
      DATABASE_USER: daniel
      DATABASE_PASSWORD: Strongandcompl3x
      KAFKA_SERVER: kafka:9092
    ports:
      - 8081:8081
